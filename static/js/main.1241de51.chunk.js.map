{"version":3,"sources":["assets/img/urban2.jpeg","assets/img/logo.png","assets/img/fly.jpg","assets/img/urban1.jpeg","assets/img/urban3.jpeg","components/NavBar.jsx","components/Autocomplete.jsx","utils/nearestNeighbors.js","utils/utils.js","utils/contentSimilarity.js","utils/slopeOne.js","components/LoadingButton.jsx","components/Home.jsx","components/Slider.jsx","components/Stars.jsx","components/RankedRoute.jsx","components/Preferences.jsx","components/SortableTable.jsx","components/Recommendation.jsx","components/Network.jsx","App.jsx","index.js"],"names":["module","exports","Navbar","bg","Brand","href","src","logo","width","height","className","alt","Nav","Link","props","items","getItemValue","item","itemKey","renderItem","isHighlighted","style","background","key","value","wrapperStyle","position","display","inputProps","shouldItemRender","v","toLowerCase","indexOf","sortItems","a","b","aLower","bLower","vLower","queryPosA","queryPosB","sortKey","onChange","e","setValue","target","onSelect","setItem","menuStyle","borderRadius","boxShadow","padding","fontSize","overflow","maxHeight","zIndex","getWeights","preferences","Object","keys","starsObject","reduce","acc","user","user1","user2","influence","Math","log2","length","intersection","filter","hasOwnProperty","bind","dist","sum","abs","getDistance","route","includes","routeListToObjectOfRatings","routeList","rating","getRecommendations","recommendations","routesArray","initialRoutesArray","map","route2","contentPrediction","route1","max","simObject","score","prediction","min","contentSimilarity","weights","routesAsObjects","cur","maxScore","entries","routeObject","multiplier","values","object","predictions","neighborPrediction","nearestNeighbors","route1Array","slopeOneObject","l","s","slopeOnePrediction","slopeOne","forEach","o","avgPrediction","toFixed","Button","variant","disabled","submitButtonClicked","allowSubmit","onClick","setSubmitButtonClicked","ratingsObject","setRecommendations","Alert","marginTop","minRequired","LoadingButtonText","useState","useEffect","setTimeout","Spinner","animation","push","to","pathname","isContributor","setIsContributor","userValue","setUserValue","userObject","setUserObject","randomPhoto","photos","fly","urban1","urban2","urban3","index","floor","random","getRandomPhoto","photo","NavBar","Jumbotron","backgroundSize","backgroundImage","Container","margin","Row","Col","size","paddingBottom","user_data_array","undefined","n_votes","LoadingButton","user_rating_object","starColor","emptyStarColor","name","starCount","onStarClick","nextValue","setRating","autocompleteValue","setAutocompleteValue","newRoute","setRoute","routes_array","Stars","newRating","initialRouteList","window","history","state","setRouteList","setAllowSubmit","replaceState","marginBottom","RankedRoute","passedIndex","newRouteList","Range","createSliderWithTooltip","Slider","gradeList","n","letter","toString","gradeToNumberObject","grade","defaultValue","setLower","setUpper","tipFormatter","marks","Styles","styled","div","Table","columns","data","useTable","initialState","sortBy","id","desc","sortDescFirst","useSortBy","useBlockLayout","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","console","log","headerGroup","getHeaderGroupProps","headers","column","row","i","getRowProps","cells","cell","getCellProps","render","Header","accessor","Cell","original","url","sortMethod","Number","lower","upper","location","filteredRecs","setFilteredRecs","checked","setChecked","number","slice","gradeToNumber","urban","ToggleButton","type","currentTarget","SortableTable","exact","path","component","Home","Preferences","Recommendation","Network","ReactDOM","App","document","getElementById"],"mappings":"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","file":"static/js/main.1241de51.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/urban2.5d2b855f.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/logo.9ec8270e.png\";","module.exports = __webpack_public_path__ + \"static/media/fly.000c2b74.jpg\";","module.exports = __webpack_public_path__ + \"static/media/urban1.9ec8379c.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/urban3.44246f28.jpeg\";","import React from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport logo from \"../assets/img/logo.png\";\n\nexport default () => (\n  <Navbar bg=\"light\">\n    <Navbar.Brand href=\"#\">\n      <img\n        src={logo}\n        width=\"30\"\n        height=\"30\"\n        className=\"d-inline-block align-top\"\n        alt=\"home\"\n      />\n    </Navbar.Brand>\n    <Nav className=\"mr-auto\">\n      <Nav.Link href=\"#/network\">network</Nav.Link>\n      <Nav.Link href=\"https://github.com/zebengberg/recommend-rumney/blob/master/README.md\">\n        about\n      </Nav.Link>\n    </Nav>\n  </Navbar>\n);\n","import React from \"react\";\nimport Autocomplete from \"react-autocomplete\";\n\nexport default (props) => (\n  <Autocomplete\n    items={props.items}\n    getItemValue={(item) => item[props.itemKey]}\n    renderItem={(item, isHighlighted) => (\n      <div\n        style={{ background: isHighlighted ? \"lightgray\" : \"white\" }}\n        key={item[props.itemKey]}\n      >\n        {item[props.itemKey]}\n      </div>\n    )}\n    value={props.value}\n    wrapperStyle={{\n      position: \"relative\",\n      display: \"inline-block\",\n    }}\n    inputProps={props.inputProps}\n    shouldItemRender={(item, v) =>\n      item[props.itemKey].toLowerCase().indexOf(v.toLowerCase()) !== -1\n    }\n    // See sortStates documentation here:\n    // https://github.com/reactjs/react-autocomplete/blob/master/lib/utils.js\n    sortItems={(a, b, v) => {\n      const aLower = a[props.itemKey].toLowerCase();\n      const bLower = b[props.itemKey].toLowerCase();\n      const vLower = v.toLowerCase();\n      const queryPosA = aLower.indexOf(vLower);\n      const queryPosB = bLower.indexOf(vLower);\n      if (queryPosA !== queryPosB) {\n        return queryPosA - queryPosB;\n      }\n      return aLower[props.sortKey] < bLower[props.sortKey] ? -1 : 1;\n    }}\n    onChange={(e) => props.setValue(e.target.value)}\n    onSelect={(v, item) => {\n      props.setValue(v);\n      props.setItem(item);\n    }}\n    menuStyle={{\n      borderRadius: \"3px\",\n      boxShadow: \"0 2px 12px rgba(0, 0, 0, 0.1)\",\n      background: \"rgba(255, 255, 255, 0.9)\",\n      padding: \"2px 0\",\n      fontSize: \"90%\",\n      position: \"fixed\",\n      overflow: \"auto\",\n      maxHeight: \"50%\",\n      zIndex: \"998\",\n    }}\n  />\n);\n","import starsObject from \"../assets/data/user_rating_object.json\";\n\n/* Determine routes in common to user1 and user2. Returns an array of route names. */\nfunction getIntersection(user1, user2) {\n  return Object.keys(user1).filter({}.hasOwnProperty.bind(user2));\n}\n\n/* Calculate taxicab distance between stars in user1 and user2 restricted to \nkeys. */\nfunction getDistance(user1, user2, keys) {\n  return keys.reduce((sum, key) => sum + Math.abs(user1[key] - user2[key]), 0);\n}\n\n/* Return an object of the form {user: {dist, influence}}. */\nfunction getWeights(preferences) {\n  // Considering users who have reviewed routes in preferences.\n  return Object.keys(starsObject).reduce((acc, user) => {\n    // Influence of the user is the log of the number of routes rated.\n    const influence = Math.log2(Object.keys(starsObject[user]).length);\n    const intersection = getIntersection(starsObject[user], preferences);\n    let dist = getDistance(starsObject[user], preferences, intersection);\n    // Penalizing small intersection by adding in the standard deviation of\n    // those routes within preferences and outside of user. The exact penality\n    // here is somewhat aribtrary.\n    const complementRoutes = Object.keys(preferences).filter(\n      (route) => !intersection.includes(route)\n    );\n\n    const penalty = 0;\n\n    dist += penalty;\n    dist++; // TODO: do something better here!\n    return { ...acc, [user]: { dist, influence } };\n  }, {});\n}\n\n/* Returns an array of route names sorted in reverse by their recommendation. */\nexport default function (preferences, initialRoutesArray) {\n  const weights = getWeights(preferences);\n\n  // Object to populate with scores\n  let routesAsObjects = initialRoutesArray.reduce(\n    (acc, cur) => ({ ...acc, [cur.route]: { ...cur, score: 0, maxScore: 0 } }),\n    {}\n  );\n  routesAsObjects = Object.entries(starsObject).reduce(\n    (acc, [user, routeObject]) => {\n      for (const route in routeObject) {\n        const multiplier = (1 / weights[user].dist) * weights[user].influence;\n        acc[route].score += routeObject[route] * multiplier;\n        acc[route].maxScore += multiplier;\n      }\n      return acc;\n    },\n    routesAsObjects\n  );\n\n  return Object.values(routesAsObjects).map((object) => {\n    const predictions = {\n      ...object,\n      neighborPrediction: object.maxScore ? object.score / object.maxScore : 0,\n    };\n    delete predictions.score;\n    delete predictions.maxScore;\n    return predictions;\n  });\n}\n","import slopeOne from \"./slopeOne\";\nimport nearestNeighbors from \"./nearestNeighbors\";\nimport contentSimilarity from \"./contentSimilarity\";\nimport routesArray from \"../assets/data/route_data_array.json\";\n\n/* Transform array of {route, rating} objects into a single object of\nthe form {route: rating} */\nfunction routeListToObjectOfRatings(routeList) {\n  const validList = routeList.filter((item) => item.route && item.rating);\n  return validList.reduce(\n    (acc, item) => ({ ...acc, [item.route]: item.rating }),\n    {}\n  );\n}\n\n/* Run all recommendation algorithms. */\nfunction getRecommendations(preferences) {\n  // Recommendations gets populated with new predictions for each algorithm.\n  let recommendations = routesArray;\n  recommendations = slopeOne(preferences, recommendations);\n  recommendations = nearestNeighbors(preferences, recommendations);\n  recommendations = contentSimilarity(preferences, recommendations);\n\n  // Taking average of all recommendations\n  // TODO: generalize this\n  // Not very functional!\n  recommendations.forEach((o) => {\n    o.avgPrediction =\n      (o.neighborPrediction + o.slopeOnePrediction + o.contentPrediction) / 3;\n  });\n\n  // removing preferences from recommendations\n  for (const route in preferences) {\n    delete recommendations[route];\n  }\n\n  recommendations = recommendations.map((object) => {\n    Object.keys(object).forEach((key) => {\n      if (typeof object[key] === \"number\") {\n        object[key] = object[key].toFixed(2); // toFixed converts to string\n      }\n    });\n    return object;\n  });\n  return recommendations;\n}\n\nexport { getRecommendations, routeListToObjectOfRatings };\n","import simObject from \"../assets/data/content_similarities_object.json\";\n\n/* Make recommendation using previously calculated content similarities between\nroutes.*/\nexport default function (preferences, initialRoutesArray) {\n  return initialRoutesArray.map((route2) => {\n    // return the given preference when route2 is included in preferences\n    if (route2.route in preferences) {\n      return { ...route2, contentPrediction: preferences[route2.route] };\n    }\n\n    // there are two possible keys to consider\n    const key1 = (route1) => route1 + \" \" + route2.route;\n    const key2 = (route1) => route2.route + \" \" + route1;\n    const keys = [key1, key2];\n    let max = 0;\n\n    for (const route1 in preferences) {\n      for (const key of keys) {\n        if (key(route1) in simObject) {\n          // giving a +1 bonus\n          const score = preferences[route1] * simObject[key(route1)] + 1;\n          max = Math.max(max, score);\n        }\n      }\n    }\n\n    let prediction = max;\n    prediction = Math.min(prediction, 4); // clipping\n    prediction = Math.max(prediction, 0); // clipping\n    return { ...route2, contentPrediction: prediction };\n  });\n}\n","import slopeOneObject from \"../assets/data/slope_one_object.json\";\n\n/* Make recommendation using previously calculated slope one parameters. */\nexport default function (preferences, initialRoutesArray) {\n  return initialRoutesArray.map((route2) => {\n    const key = (route1) => route1 + \" \" + route2.route; // helper function\n    let route1Array = Object.entries(preferences).filter(\n      ([route1]) => key(route1) in slopeOneObject\n    );\n\n    route1Array = route1Array.map(\n      ([route1, rating]) => rating - slopeOneObject[key(route1)]\n    );\n\n    // averaging over all route1\n    const l = route1Array.length;\n    const s = route1Array.reduce((sum, cur) => sum + cur, 0);\n    // could give small bonus to more popular route2 here\n    let prediction = l ? s / l : 0; // avoiding dividing by 0\n    prediction = Math.min(prediction, 4); // clipping\n    prediction = Math.max(prediction, 0); // clipping\n    return { ...route2, slopeOnePrediction: prediction };\n  });\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Button, Alert, Spinner } from \"react-bootstrap\";\nimport Redirect from \"react-router-dom/Redirect\";\nimport { getRecommendations } from \"../utils/utils\";\n\nexport default (props) => {\n  return (\n    <>\n      <Button\n        variant=\"primary\"\n        disabled={props.submitButtonClicked && props.allowSubmit}\n        onClick={\n          !props.submitButtonClicked\n            ? () => {\n                props.setSubmitButtonClicked(true);\n              }\n            : null\n        }\n      >\n        {props.allowSubmit && props.submitButtonClicked ? (\n          <LoadingButtonText\n            allowSubmit={props.allowSubmit}\n            submitButtonClicked={props.submitButtonClicked}\n            ratingsObject={props.ratingsObject}\n            setRecommendations={props.setRecommendations}\n          />\n        ) : (\n          \"Get Recommendations\"\n        )}\n      </Button>\n      {!props.allowSubmit && props.submitButtonClicked && (\n        <Alert variant=\"warning\" style={{ marginTop: 50 }}>\n          You must complete preferences for {props.minRequired} distinct routes\n          to continue. So far you have only completed preferences for{\" \"}\n          {Object.keys(props.ratingsObject).length} distinct routes.\n        </Alert>\n      )}\n    </>\n  );\n};\n\nconst LoadingButtonText = (props) => {\n  const [recommendations, setRecommendations] = useState(null);\n\n  useEffect(() => {\n    // Timeout guarantees \"Calculating...\" will render before recommendations calculated\n    setTimeout(\n      () => setRecommendations(getRecommendations(props.ratingsObject)),\n      50\n    );\n  }, [props.ratingsObject]);\n\n  return (\n    <>\n      <div>Calculating...</div>\n      <Spinner animation=\"border\" variant=\"info\" />\n      {recommendations !== null && (\n        <Redirect\n          push\n          to={{\n            pathname: \"/recommendation\",\n            recommendations: recommendations,\n            preferences: props.ratingsObject,\n          }}\n        />\n      )}\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport Link from \"react-router-dom/Link\";\nimport { Jumbotron, Button, Row, Container, Col } from \"react-bootstrap\";\nimport NavBar from \"./NavBar\";\nimport Autocomplete from \"./Autocomplete\";\nimport LoadingButton from \"./LoadingButton\";\nimport user_data_array from \"../assets/data/user_data_array.json\";\nimport user_rating_object from \"../assets/data/user_rating_object.json\";\nimport fly from \"../assets/img/fly.jpg\";\nimport urban1 from \"../assets/img/urban1.jpeg\";\nimport urban2 from \"../assets/img/urban2.jpeg\";\nimport urban3 from \"../assets/img/urban3.jpeg\";\n\nexport default () => {\n  const [isContributor, setIsContributor] = useState(null);\n  const [userValue, setUserValue] = useState(\"\");\n  const [userObject, setUserObject] = useState({});\n  const [submitButtonClicked, setSubmitButtonClicked] = useState(false);\n  const randomPhoto = getRandomPhoto();\n  const [photo] = useState(randomPhoto); // don't allow photo to change\n\n  return (\n    <>\n      <NavBar />\n      <Jumbotron\n        style={{\n          backgroundSize: \"cover\",\n          backgroundImage: `linear-gradient(to top, rgba(255,255,255,0.2), rgba(255,255,255,0.7)), url(${photo})`,\n        }}\n      >\n        <Container>\n          <h1 style={{ fontSize: \"100px\" }}>recommend rumney!</h1>\n          <p>Get a custom recommendation for a new route.</p>\n        </Container>\n      </Jumbotron>\n\n      <Container style={{ margin: \"2rem\" }}>\n        <Row>\n          <Col>\n            <h3>Already an active Mountain Project contributor at Rumney?</h3>\n          </Col>\n          <Col>\n            <Button size=\"lg\" onClick={() => setIsContributor(true)}>\n              yes\n            </Button>{\" \"}\n            <Button size=\"lg\" onClick={() => setIsContributor(false)}>\n              no\n            </Button>\n          </Col>\n        </Row>\n      </Container>\n\n      {isContributor === true && (\n        <Container>\n          <Row>\n            <Col style={{ paddingBottom: \"20rem\" }}>\n              <p>Find your username below.</p>\n              <Autocomplete\n                value={userValue}\n                setValue={setUserValue}\n                setItem={setUserObject} // placeholder; could use this to grab data on user\n                items={user_data_array}\n                itemKey={\"user\"}\n                sortKey={\"n_votes\"}\n              />\n            </Col>\n            <Col>\n              {userObject.n_votes !== undefined && (\n                <p>\n                  Hello <b>{userValue}</b>! You have contributed ratings to{\" \"}\n                  <b>{userObject.n_votes}</b> routes in the Mountain Project\n                  Rumney database.\n                </p>\n              )}\n            </Col>\n            <Col>\n              {userObject.n_votes !== undefined && (\n                <LoadingButton\n                  ratingsObject={user_rating_object[userValue]}\n                  allowSubmit={true}\n                  submitButtonClicked={submitButtonClicked}\n                  setSubmitButtonClicked={setSubmitButtonClicked}\n                  minRequired={null}\n                />\n              )}\n            </Col>\n          </Row>\n        </Container>\n      )}\n\n      {isContributor === false && (\n        <Container style={{ margin: \"3em\" }}>\n          <Link to=\"/preferences\">\n            <Button size=\"lg\" variant=\"success\">\n              Build custom preferences\n            </Button>\n          </Link>\n        </Container>\n      )}\n    </>\n  );\n};\n\nfunction getRandomPhoto() {\n  const photos = [fly, urban1, urban2, urban3];\n  const index = Math.floor(Math.random() * photos.length);\n  return photos[index];\n}\n","import React from \"react\";\nimport Slider from \"rc-slider\";\nimport \"rc-slider/assets/index.css\";\n\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\nconst Range = createSliderWithTooltip(Slider.Range);\n\n// Building array of climbing grades\nexport const gradeList = [];\nfor (let n = 0; n < 15; n++) {\n  const subGrade = n < 10 ? [\"\"] : [\"a\", \"b\", \"c\", \"d\"];\n  for (const letter of subGrade) {\n    gradeList.push(\"5.\" + n.toString() + letter);\n  }\n}\ngradeList.push(\"5.15a\");\n\nconst gradeToNumberObject = gradeList.reduce(\n  (acc, grade, index) => ({ ...acc, [grade]: index }),\n  {}\n);\n\n// Building a function to deal with edge cases such as 5.12a/b and 5.8+\nexport const gradeToNumber = (grade) => {\n  let number = gradeToNumberObject[grade];\n  if (number === undefined) {\n    if (grade[2] === \"1\") {\n      // e.g. grade = 5.1xxxx\n      number = gradeToNumberObject[grade.slice(0, 5)]; // truncating slash grade\n      if (number === undefined) {\n        // e.g. grade = 5.10-\n        number = gradeToNumberObject[grade.slice(0, 4) + \"a\"]; // converting to 5.10a\n      }\n    } else {\n      // e.g. grade = 5.8+\n      number = gradeToNumberObject[grade.slice(0, 3)];\n    }\n  }\n  return number;\n};\n\nexport default (props) => (\n  <div style={{ margin: 50 }}>\n    <Range\n      min={0}\n      max={gradeList.length - 1}\n      defaultValue={[0, gradeList.length - 1]}\n      onChange={(value) => {\n        props.setLower(value[0]);\n        props.setUpper(value[1]);\n      }}\n      tipFormatter={(value) => gradeList[value]}\n      // could use indexOf('5.10a') to find an initial index\n      marks={[2, 6, 10, 14, 18, 22, 26, 30].reduce(\n        (acc, cur) => ({ ...acc, [cur]: gradeList[cur] }),\n        {}\n      )}\n    />\n  </div>\n);\n","import React from \"react\";\nimport StarRatingComponent from \"react-star-rating-component\";\n\nexport default (props) => {\n  return (\n    <>\n      Rate it.\n      <StarRatingComponent\n        style={{ position: \"absolute\" }}\n        starColor=\"gold\"\n        emptyStarColor=\"lightgray\"\n        name={\"to be given route name\"}\n        starCount={4}\n        value={props.rating}\n        onStarClick={(nextValue) => props.setRating(nextValue)}\n        // renderStarIcon={(index, value) => {\n        //   return <span>☆</span>;\n        // }}\n      />\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { Button } from \"react-bootstrap\";\nimport Autocomplete from \"./Autocomplete\";\nimport Stars from \"./Stars\";\nimport routes_array from \"../assets/data/route_data_array.json\";\n\nexport default (props) => {\n  const [autocompleteValue, setAutocompleteValue] = useState(props.value);\n  return (\n    <Row>\n      <Col>\n        <Autocomplete\n          value={autocompleteValue}\n          setValue={setAutocompleteValue}\n          setItem={(newRoute) => props.setRoute(newRoute, props.index)}\n          items={routes_array}\n          itemKey={\"route\"}\n          sortKey={\"n_votes\"}\n          inputProps={{ style: { width: \"20rem\" } }}\n        />\n      </Col>\n\n      <Col>\n        <Stars\n          rating={props.rating}\n          setRating={(newRating) => props.setRating(newRating, props.index)}\n        />\n      </Col>\n\n      <Col>\n        <Button\n          onClick={() => {\n            props.setRoute({}, props.index);\n            props.setRating(0, props.index);\n            setAutocompleteValue(\"\");\n          }}\n        >\n          clear\n        </Button>\n      </Col>\n    </Row>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Container, Row, Button } from \"react-bootstrap\";\nimport NavBar from \"./NavBar\";\nimport RankedRoute from \"./RankedRoute\";\nimport LoadingButton from \"./LoadingButton\";\nimport { routeListToObjectOfRatings } from \"../utils/utils\";\n\n// Minimum number of preferences before allowing submission\nconst minRequired = 1;\n\nexport default () => {\n  // Reloading previous state after pressing back button from recommendations.\n  const initialRouteList =\n    window.history.state !== null\n      ? window.history.state\n      : [{ route: \"\", rating: 0 }];\n\n  const [routeList, setRouteList] = useState(initialRouteList);\n  const [submitButtonClicked, setSubmitButtonClicked] = useState(false);\n  const [allowSubmit, setAllowSubmit] = useState(false);\n\n  // Add a new <RankedRoute> if the last one has been filled.\n  useEffect(() => {\n    window.history.replaceState(routeList, \"\"); // in order to reload after back\n    setAllowSubmit(\n      Object.keys(routeListToObjectOfRatings(routeList)).length >= minRequired\n    );\n    if (\n      routeList[routeList.length - 1].route &&\n      routeList[routeList.length - 1].rating\n    ) {\n      setRouteList([...routeList, { route: \"\", rating: 0 }]);\n      setSubmitButtonClicked(false); // reset the button to hide alert\n    }\n  }, [routeList]);\n\n  return (\n    <>\n      <NavBar />\n      <Container className=\"p-3\">\n        <h1>Preferences</h1>\n        <Row style={{ marginBottom: 50 }}>\n          <p>\n            In order to get a good recommendation, you need to provide the\n            algorithm some of your existing preferences. Enter several Rumney\n            routes for which you have strong opinions (positive or negative)\n            below. To get the best recommendation, enter several of your\n            favorite Rumney routes and give them four stars.\n          </p>\n\n          <Button onClick={() => setRouteList([{ route: \"\", rating: 0 }])}>\n            Reset all\n          </Button>\n        </Row>\n\n        {routeList.map((routeObject, index) => (\n          <Row key={index /* very very import to have this key! */}>\n            <RankedRoute\n              index={index}\n              value={routeObject.route}\n              setRoute={(newRoute, passedIndex) => {\n                const newRouteList = [...routeList];\n                newRouteList[passedIndex].route = newRoute.route;\n                setRouteList(newRouteList);\n              }}\n              rating={routeObject.rating}\n              setRating={(newRating, passedIndex) => {\n                const newRouteList = [...routeList];\n                newRouteList[passedIndex].rating = newRating;\n                setRouteList(newRouteList);\n              }}\n            />\n          </Row>\n        ))}\n\n        <LoadingButton\n          ratingsObject={routeListToObjectOfRatings(routeList)}\n          allowSubmit={allowSubmit}\n          submitButtonClicked={submitButtonClicked}\n          setSubmitButtonClicked={setSubmitButtonClicked}\n          minRequired={minRequired}\n        />\n      </Container>\n    </>\n  );\n};\n","import React from \"react\";\nimport { useTable, useSortBy, useBlockLayout } from \"react-table\";\nimport styled from \"styled-components\";\n\nconst Styles = styled.div`\n  padding: 1rem;\n\n  table {\n    border-spacing: 0;\n    border: 1px solid black;\n\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n`;\n\nfunction Table({ columns, data }) {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: {\n        sortBy: [\n          {\n            id: \"avgPrediction\",\n            desc: true,\n          },\n        ],\n      },\n      sortDescFirst: true,\n    },\n    useSortBy,\n    useBlockLayout\n  );\n  console.log(headerGroups);\n\n  return (\n    <>\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                // Add the sorting props to control sorting. For this example\n                // we can add them into the header props\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                  {column.render(\"Header\")}\n                  {/* Add a sort direction indicator */}\n                  <span>\n                    {column.isSorted\n                      ? column.isSortedDesc\n                        ? \" 🔽\"\n                        : \" 🔼\"\n                      : \"\"}\n                  </span>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row, i) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      <br />\n    </>\n  );\n}\n\nexport default (props) => {\n  const columns = [\n    {\n      Header: \"Route\",\n      accessor: \"route\",\n      Cell: ({ row }) => <a href={row.original.url}> {row.values.route} </a>,\n    },\n    { Header: \"Grade\", accessor: \"grade\" },\n    {\n      Header: \"Average MP rating\",\n      accessor: \"avg_rating\",\n      sortDescFirst: true,\n      sortMethod: (a, b) => Number(a) - Number(b),\n    },\n    {\n      Header: \"Average prediction\",\n      accessor: \"avgPrediction\",\n      sortDescFirst: true,\n      sortMethod: (a, b) => Number(a) - Number(b),\n    },\n    {\n      Header: \"Nearest-neighbors prediction\",\n      accessor: \"neighborPrediction\",\n      sortDescFirst: true,\n      sortMethod: (a, b) => Number(a) - Number(b),\n    },\n    {\n      Header: \"Slope-one prediction\",\n      accessor: \"slopeOnePrediction\",\n      sortDescFirst: true,\n      sortMethod: (a, b) => Number(a) - Number(b),\n    },\n    {\n      Header: \"Content prediction\",\n      accessor: \"contentPrediction\",\n      sortDescFirst: true,\n      sortMethod: (a, b) => Number(a) - Number(b),\n    },\n  ];\n  const data = props.data; // useMemo?\n\n  return (\n    <Styles>\n      <Table columns={columns} data={data} />\n    </Styles>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Container, Alert, ToggleButton } from \"react-bootstrap\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Link from \"react-router-dom/Link\";\nimport NavBar from \"./NavBar\";\nimport Slider, { gradeToNumber, gradeList } from \"./Slider\";\nimport SortableTable from \"./SortableTable\";\nimport urban from \"../assets/img/urban2.jpeg\";\n\nexport default (props) => {\n  const [lower, setLower] = useState(0);\n  const [upper, setUpper] = useState(gradeList.length - 1);\n  const recommendations = props.location.recommendations;\n  const preferences = props.location.preferences;\n  const [filteredRecs, setFilteredRecs] = useState(recommendations);\n  const [checked, setChecked] = useState(true);\n\n  useEffect(() => {\n    if (recommendations !== undefined) {\n      setFilteredRecs(\n        recommendations.filter((route) => {\n          if (!checked && route.route in preferences) {\n            return false;\n          }\n          const grade = gradeToNumber(route.grade);\n          return grade <= upper && grade >= lower;\n        })\n      );\n    }\n  }, [lower, upper, checked, recommendations, preferences]);\n\n  return (\n    <>\n      <NavBar />\n      <Jumbotron\n        style={{\n          backgroundSize: \"cover\",\n          backgroundImage: `linear-gradient(to top, rgba(255,255,255,0.2), rgba(255,255,255,0.7)), url(${urban})`,\n        }}\n      >\n        <Container>\n          <h1>recommendations</h1>\n        </Container>\n      </Jumbotron>\n\n      <Container>\n        {recommendations === undefined ? (\n          <Alert variant=\"warning\">\n            No preferences recorded. Please go to the{\" \"}\n            <Link to=\"/preferences\">preferences page</Link> to log your\n            opinions.\n          </Alert>\n        ) : (\n          <>\n            <p>Use the slider to filter by grade.</p>\n            <Slider\n              lower={lower}\n              setLower={setLower}\n              upper={upper}\n              setUpper={setUpper}\n            />\n            <ToggleButton\n              type=\"checkbox\"\n              variant=\"info\"\n              size=\"sm\"\n              checked={checked}\n              onChange={(e) => setChecked(e.currentTarget.checked)}\n            >\n              Include your preferences in the results below?\n            </ToggleButton>\n\n            <SortableTable data={filteredRecs.slice(0, 50)} />\n          </>\n        )}\n      </Container>\n    </>\n  );\n};\n","import React from \"react\";\n\nexport default () => <h1>hello world!</h1>;\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport Home from \"./components/Home.jsx\";\nimport Preferences from \"./components/Preferences\";\nimport Recommendation from \"./components/Recommendation\";\nimport Network from \"./components/Network\";\n\nexport default () => (\n  <Router>\n    <Route exact path=\"/\" component={Home} />\n    <Route path=\"/preferences\" component={Preferences} />\n    <Route path=\"/recommendation\" component={Recommendation} />\n    <Route path=\"/network\" component={Network} />\n  </Router>\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.jsx\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}