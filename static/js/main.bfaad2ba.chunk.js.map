{"version":3,"sources":["assets/fly.jpg","components/Autocomplete.js","components/Home.js","components/About.js","components/Stars.js","components/RankedRoute.js","components/Preferences.js","algorithm.js","components/Slider.js","components/Recommendation.js","App.js","index.js"],"names":["module","exports","props","items","getItemValue","item","itemKey","renderItem","isHighlighted","style","background","key","value","wrapperStyle","position","display","inputProps","shouldItemRender","v","toLowerCase","indexOf","sortItems","a","b","aLower","bLower","vLower","queryPosA","queryPosB","sortKey","onChange","_","setValue","onSelect","setMeasure","menuStyle","borderRadius","boxShadow","padding","fontSize","overflow","maxHeight","zIndex","useState","user","setUser","numVotes","setNumVotes","Jumbotron","backgroundSize","backgroundImage","fly","to","Button","variant","Container","users","adjective","Row","marginTop","Col","size","measure","starColor","emptyStarColor","name","starCount","rating","onStarClick","nextValue","setRating","route","newRoute","setRoute","index","routes","width","Stars","newRating","onClick","e","routeList","setRouteList","buttonClicked","setButtonClicked","length","getValidAndDistinctEntries","list","validList","filter","o","routeNames","map","firstIndices","Set","i","ConditionalLink","children","condition","className","routeObject","RankedRoute","toString","passedIndex","routeListCopy","pathname","preferences","Alert","getDotProduct","user1","user2","keys","reduce","getWeights","Object","stars","acc","cur","influence","Math","log2","intersection","hasOwnProperty","bind","weightedAngle","dot","norm1","norm2","pow","getCosine","Range","createSliderWithTooltip","Slider","grades","n","letter","push","margin","min","max","defaultValue","setLower","setUpper","tipFormatter","marks","lower","upper","accumulator","currentValue","recommendations","weights","entries","sort","getRecommendations","slice","console","log","undefined","exact","path","component","Home","About","Preferences","Recommendation","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.bfaad2ba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fly.000c2b74.jpg\";","import React from \"react\";\nimport Autocomplete from \"react-autocomplete\";\n\nexport default (props) => (\n  <Autocomplete\n    items={props.items}\n    getItemValue={(item) => item[props.itemKey]}\n    renderItem={(item, isHighlighted) => (\n      <div\n        style={{ background: isHighlighted ? \"lightgray\" : \"white\" }}\n        key={item[props.itemKey]}\n      >\n        {item[props.itemKey]}\n      </div>\n    )}\n    value={props.value}\n    wrapperStyle={{\n      position: \"relative\",\n      display: \"inline-block\",\n    }}\n    inputProps={props.inputProps}\n    shouldItemRender={(item, v) =>\n      item[props.itemKey].toLowerCase().indexOf(v.toLowerCase()) !== -1\n    }\n    // See sortStates documentation here:\n    // https://github.com/reactjs/react-autocomplete/blob/master/lib/utils.js\n    sortItems={(a, b, v) => {\n      const aLower = a[props.itemKey].toLowerCase();\n      const bLower = b[props.itemKey].toLowerCase();\n      const vLower = v.toLowerCase();\n      const queryPosA = aLower.indexOf(vLower);\n      const queryPosB = bLower.indexOf(vLower);\n      if (queryPosA !== queryPosB) {\n        return queryPosA - queryPosB;\n      }\n      return aLower[props.sortKey] < bLower[props.sortKey] ? -1 : 1;\n    }}\n    onChange={(_, v) => props.setValue(v)}\n    onSelect={(_, item) => {\n      props.setValue(item[props.itemKey]);\n      if (\"setMeasure\" in props) {\n        props.setMeasure(item[props.sortKey]);\n      }\n    }}\n    menuStyle={{\n      borderRadius: \"3px\",\n      boxShadow: \"0 2px 12px rgba(0, 0, 0, 0.1)\",\n      background: \"rgba(255, 255, 255, 0.9)\",\n      padding: \"2px 0\",\n      fontSize: \"90%\",\n      position: \"fixed\",\n      overflow: \"auto\",\n      maxHeight: \"50%\", // TODO: don't cheat, let it flow to the bottom\n      zIndex: \"998\",\n    }}\n  />\n);\n","import React, { useState } from \"react\";\nimport { Jumbotron, Button, Row, Container, Col } from \"react-bootstrap\";\nimport Link from \"react-router-dom/Link\";\nimport Autocomplete from \"./Autocomplete\";\nimport users from \"../assets/users.json\";\nimport fly from \"../assets/fly.jpg\";\n\nexport default () => {\n  const [user, setUser] = useState(\"\");\n  const [numVotes, setNumVotes] = useState(null);\n  return (\n    <>\n      <Jumbotron\n        style={{\n          backgroundSize: \"cover\",\n          backgroundImage: `linear-gradient(to top, rgba(255,255,255,0), rgba(255,255,255,0.7)), url(${fly})`,\n        }}\n      >\n        <h1>recommend rumney!</h1>\n        <p>\n          Want a custom recommendation for an amazing route you haven't yet\n          tried??\n        </p>\n        <p>\n          <Link to=\"/about\">\n            <Button variant=\"info\">How it works</Button>\n          </Link>\n        </p>\n      </Jumbotron>\n\n      <Container>\n        <h3>Already a contributor?</h3>\n        <p>Search for your Mountain Project username below.</p>\n        <Autocomplete\n          value={user}\n          setValue={setUser}\n          setMeasure={setNumVotes}\n          items={users}\n          itemKey={\"user\"}\n          sortKey={\"n_votes\"}\n        />\n        {numVotes !== null && (\n          <p>\n            Wow, congratulations <b>{user}</b>! You have given star ratings to{\" \"}\n            <b>{numVotes}</b> routes in the Mountain Project Rumney database.\n            You are {adjective(numVotes)} user.\n          </p>\n        )}\n\n        <Row style={{ marginTop: \"5rem\" }}>\n          <Col>\n            <Link to=\"/preferences\">\n              <Button size=\"lg\">Build your own custom preferences</Button>\n            </Link>\n          </Col>\n          {numVotes !== null && (\n            <Col>\n              <Link to=\"/implement-this\">\n                <Button size=\"lg\">Use your existing ratings</Button>\n              </Link>\n            </Col>\n          )}\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nconst adjective = (measure) => {\n  if (measure > 100) {\n    return \"an exceptional\";\n  }\n  if (measure > 20) {\n    return \"a distinguished\";\n  }\n  if (measure > 5) {\n    return \"a capable\";\n  } else {\n    return \"an uncommitted\";\n  }\n};\n","import React from \"react\";\n\nexport default () => (\n  <>\n    <h1>Algorithm</h1>\n    <p>We use some math to make it work.</p>\n    <p>Then you have new things to climb.</p>\n  </>\n);\n","import React from \"react\";\nimport StarRatingComponent from \"react-star-rating-component\";\n\nexport default (props) => {\n  return (\n    <>\n      Rate it.\n      <StarRatingComponent\n        style={{ position: \"absolute\" }}\n        starColor=\"gold\"\n        emptyStarColor=\"lightgray\"\n        name={\"to be given route name\"}\n        starCount={4}\n        value={props.rating}\n        onStarClick={(nextValue) => props.setRating(nextValue)}\n        // renderStarIcon={(index, value) => {\n        //   return <span>☆</span>;\n        // }}\n      />\n    </>\n  );\n};\n","import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport Autocomplete from \"./Autocomplete\";\nimport Stars from \"./Stars\";\nimport routes from \"../assets/routes.json\";\nimport { Button } from \"react-bootstrap\";\n\nexport default (props) => (\n  <Row>\n    <Col>\n      <Autocomplete\n        value={props.route}\n        setValue={(newRoute) => props.setRoute(newRoute, props.index)}\n        items={routes}\n        itemKey={\"route\"}\n        sortKey={\"n_votes\"}\n        inputProps={{ style: { width: \"20rem\" } }}\n      />\n    </Col>\n\n    <Col>\n      <Stars\n        rating={props.rating}\n        setRating={(newRating) => props.setRating(newRating, props.index)}\n      />\n    </Col>\n    <Col>\n      <Button\n        onClick={(e) => {\n          props.setRoute(\"\", props.index);\n          props.setRating(0, props.index);\n        }}\n      >\n        clear\n      </Button>\n    </Col>\n  </Row>\n);\n","import React, { useState } from \"react\";\nimport { Container, Row, Button, Alert } from \"react-bootstrap\";\nimport Link from \"react-router-dom/Link\";\nimport RankedRoute from \"./RankedRoute\";\n\nexport default () => {\n  const [routeList, setRouteList] = useState([{ route: \"\", rating: 0 }]);\n  const [buttonClicked, setButtonClicked] = useState(false);\n\n  // Add a new <RankedRoute> if the last one has been filled.\n  // Reset the warning alert\n  if (\n    routeList[routeList.length - 1].route &&\n    routeList[routeList.length - 1].rating\n  ) {\n    setRouteList([...routeList, { route: \"\", rating: 0 }]);\n    setButtonClicked(false);\n  }\n\n  // Determine if sufficient route preferences are given for submission.\n  const minDistinctRoutesRequired = 5;\n\n  // Helper function\n  const getValidAndDistinctEntries = (list) => {\n    const validList = list.filter((o) => o.route && o.rating);\n    // Using filter for routeNames to avoid empty string as name\n    const routeNames = validList.map((o) => o.route).filter((o) => o);\n    const firstIndices = routeNames.map((name) => routeNames.indexOf(name));\n    const firstIndicesNoDuplicates = [...new Set(firstIndices)];\n    return firstIndicesNoDuplicates.map((i) => validList[i]);\n  };\n\n  const ConditionalLink = ({ children, to, condition }) =>\n    condition && to ? <Link to={to}>{children}</Link> : <>{children}</>;\n\n  return (\n    <Container className=\"p-3\">\n      <h1>Preferences</h1>\n      <p>\n        In order to get a recommendation, you need to provide the algorithm some\n        of your current preferences. Enter several Rumney routes for which you\n        have strong opinions (positive or negative) below.\n      </p>\n      <Row>\n        {routeList.map((routeObject, index) => (\n          <RankedRoute\n            key={index.toString()}\n            index={index}\n            route={routeObject.route}\n            setRoute={(newRoute, passedIndex) => {\n              const routeListCopy = [...routeList];\n              routeListCopy[passedIndex].route = newRoute;\n              setRouteList(routeListCopy);\n            }}\n            rating={routeObject.rating}\n            setRating={(newRating, passedIndex) => {\n              const routeListCopy = [...routeList];\n              routeListCopy[passedIndex].rating = newRating;\n              setRouteList(routeListCopy);\n            }}\n          />\n        ))}\n      </Row>\n      <ConditionalLink\n        to={{\n          pathname: \"/recommendation\",\n          preferences: getValidAndDistinctEntries(routeList),\n        }}\n        condition={\n          getValidAndDistinctEntries(routeList).length >=\n          minDistinctRoutesRequired\n        }\n      >\n        <Button onClick={(e) => setButtonClicked(true)}>\n          Get Recommendation\n        </Button>\n      </ConditionalLink>\n      {getValidAndDistinctEntries(routeList).length <\n        minDistinctRoutesRequired &&\n        buttonClicked && (\n          <Alert variant=\"warning\">\n            You must complete preferences for {minDistinctRoutesRequired}{\" \"}\n            distinct routes to continue. So far you have only completed\n            preferences for {getValidAndDistinctEntries(routeList).length}{\" \"}\n            distinct routes.\n          </Alert>\n        )}\n    </Container>\n  );\n};\n","import stars from \"./assets/stars.json\";\nimport routes from \"./assets/routes.json\";\n\n/* Determine routes in common to user1 and user2. */\nfunction getIntersection(user1, user2) {\n  return Object.keys(user1).filter({}.hasOwnProperty.bind(user2));\n}\n\n/* Calculate taxicab distance between stars in user1 and user2 restricted to \nkeys. The exact formula is taxicab metric - #keys / 2. This does not satisfy\nthe triangle inequality because the intersection keys have no transitivity.*/\nfunction getDistance(user1, user2, keys) {\n  const sum = keys.reduce(\n    (sum, key) => sum + Math.abs(user1[key] - user2[key]),\n    0\n  );\n  // TODO: make this fix better\n  return sum - keys.length / 2 + 10; // add 10 to keep positive;\n}\n\n/* Calculate the dot product of user1[keys] and user2[keys]. */\nfunction getDotProduct(user1, user2, keys) {\n  const products = keys.map((key) => user1[key] * user2[key]);\n  return products.reduce((a, b) => a + b, 0);\n}\n\n/* Calculate the cosine of the angle between user1[keys] and user2[keys]. */\nfunction getCosine(user1, user2, keys) {\n  const dot = getDotProduct(user1, user2, keys);\n  const norm1 = getDotProduct(user1, user1, keys);\n  const norm2 = getDotProduct(user2, user2, keys);\n  return dot / Math.pow(norm1 * norm2, 0.5);\n}\n\n/* Return an object of the form {user: weightedAngle}. */\nfunction getWeights(preferences) {\n  // Considering users who have reviewed routes in preferences.\n  return Object.keys(stars).reduce((acc, cur) => {\n    // Influence of the user is the log of the number of routes rated.\n    const influence = Math.log2(Object.keys(stars[cur]).length);\n\n    const intersection = getIntersection(stars[cur], preferences);\n\n    // Avoiding dividing by zero in definition of getAngle.\n    const weightedAngle = intersection.length\n      ? influence * getCosine(stars[cur], preferences, intersection)\n      : 0;\n\n    // TODO: finish this!!\n    //const weightedDistance = intersection.length ? influence : 1;\n\n    return { ...acc, [cur]: weightedAngle };\n  }, {});\n}\n\n/* Returns an array of route names sorted in reverse by their recommendation. */\nexport default (preferences) => {\n  const weights = getWeights(preferences);\n\n  // Object with route names as keys and all values as 0.\n  let recommendations = routes.reduce(\n    (acc, cur) => ({ ...acc, [cur.route]: 0 }),\n    {}\n  );\n\n  // Populating the recommendations object.\n  recommendations = Object.entries(stars).reduce((acc, [user, routeObject]) => {\n    for (const route in routeObject) {\n      acc[route] += routeObject[route] * weights[user];\n    }\n    return acc;\n  }, recommendations);\n\n  // Transforming into entries array in order to sort.\n  // A route appears earlier in the array if it has a higher recommendation.\n  recommendations = Object.entries(recommendations);\n  recommendations = recommendations.sort((a, b) => b[1] - a[1]);\n\n  // Picking off just the route name, which will be returned as an array.\n  // TODO: do something with the score\n  return recommendations.map(([route, score]) => route);\n};\n\nconst testRecommendations = [\n  \"Lonesome Dove\",\n  \"Armed and Dangerous, and Off My Medication\",\n  \"Yoda\",\n  \"Underdog\",\n  \"Junco\",\n  \"Metamorphosis\",\n  \"Oby-won Ryobi\",\n  \"Masterpiece\",\n  \"Waimea\",\n  \"Clip a Dee Doo Dah\",\n  \"Millenium Falcon\",\n  \"Peer Pressure\",\n  \"Jolt\",\n  \"Sweet Polly Purebred\",\n  \"Centerpiece\",\n  \"Romancing the Stone\",\n  \"Hippos on Parade\",\n  \"Glory Jean's\",\n  \"Lies and Propaganda\",\n  \"War and  Peace\",\n  \"Bolt Line\",\n  \"Scene of the Crime\",\n  \"Clusterphobia\",\n  \"Tropicana\",\n  \"Sesame Street\",\n  \"Flying Hawaiian\",\n  \"No Money Down\",\n  \"The Big Easy\",\n  \"Rise and Shine\",\n  \"Espresso\",\n  \"Know Ethics\",\n];\n","import React from \"react\";\nimport Slider from \"rc-slider\";\nimport \"rc-slider/assets/index.css\";\n\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\nconst Range = createSliderWithTooltip(Slider.Range);\n\nexport default (props) => {\n  // Building array of climbing grades\n  const grades = [];\n  for (let n = 0; n < 15; n++) {\n    const subGrade = n < 10 ? [\"\"] : [\"a\", \"b\", \"c\", \"d\"];\n    for (const letter of subGrade) {\n      grades.push(\"5.\" + n.toString() + letter);\n    }\n  }\n  grades.push(\"5.15a\");\n\n  return (\n    <div style={{ margin: 50 }}>\n      <Range\n        min={0}\n        max={grades.length - 1}\n        defaultValue={[0, grades.length - 1]}\n        onChange={(value) => {\n          props.setLower(value[0]);\n          props.setUpper(value[1]);\n        }}\n        tipFormatter={(value) => grades[value]}\n        marks={[2, 6, 10, 14, 18, 22, 26, 30].reduce(\n          (acc, cur) => ({ ...acc, [cur]: grades[cur] }),\n          {}\n        )}\n      />\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Container, Alert } from \"react-bootstrap\";\nimport Link from \"react-router-dom/Link\";\nimport getRecommendations from \"../algorithm\";\nimport Slider from \"./Slider\";\n\nexport default (props) => {\n  const [lower, setLower] = useState(0);\n  const [upper, setUpper] = useState(0);\n\n  // TODO: put all of this into preference file\n  const testPreferences = [\n    { route: \"Yoda\", rating: 3 },\n    { route: \"Piece of Cake\", rating: 1 },\n    { route: \"Arugula, Arugula\", rating: 2 },\n    { route: \"Chloe's Breakfast Special\", rating: 1 },\n    { route: \"B-B-Buttress\", rating: 4 },\n  ];\n\n  //const preferences = props.location.preferences;\n\n  // Transforming list of {route, rating} objects into a single object.\n  let reducer = (accumulator, currentValue) => ({\n    ...accumulator,\n    [currentValue.route]: currentValue.rating,\n  });\n  const preferences = testPreferences.reduce(reducer, {});\n  // Only keeping some of the array\n  const recommendations = getRecommendations(preferences).slice(0, 50);\n\n  console.log(recommendations);\n\n  return (\n    <Container>\n      <h1>Recommendations</h1>\n      {preferences === undefined ? (\n        <Alert variant=\"warning\">\n          No preferences recorded. Please go to the{\" \"}\n          <Link to=\"/preferences\">preferences page</Link> to log your opionions.\n        </Alert>\n      ) : (\n        <>\n          <p>Use the slider to filter by grade.</p>\n          <Slider\n            lower={lower}\n            setLower={setLower}\n            upper={upper}\n            setUpper={setUpper}\n          />\n          {/* <ol>\n            {recommendations.map((route) => (\n              <li key={route}>{route}</li>\n            ))}\n          </ol> */}\n        </>\n      )}\n    </Container>\n  );\n};\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport Home from \"./components/Home\";\nimport About from \"./components/About\";\nimport Preferences from \"./components/Preferences\";\nimport Recommendation from \"./components/Recommendation\";\n\nexport default () => (\n  <Router>\n    <Route exact path=\"/recommend-rumney\" component={Home} />\n    <Route path=\"/recommend-rumney/about\" component={About} />\n    <Route path=\"/recommend-rumney/preferences\" component={Preferences} />\n    <Route path=\"/recommend-rumney/recommendation\" component={Recommendation} />\n  </Router>\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}